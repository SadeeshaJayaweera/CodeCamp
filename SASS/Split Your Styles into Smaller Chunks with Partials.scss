<!-- The main.scss file -->
@import 'variables'

// The Question - ‚úÖüßë‚Äçüíª


  // Partials in Sass allow you to split your styles into smaller, reusable chunks.
// These partial files are not converted directly into CSS files when compiled.
// Instead, they are imported into a main file using the @import directive.

// Step 1: Create a partial file named _variables.scss.
// Partial file names begin with an underscore (_) and have the .scss extension.
// For example: _variables.scss

// Example content for _variables.scss:
$primary-color: #3498db; // Define a primary color variable
$secondary-color: #2ecc71; // Define a secondary color variable
$text-color: #333; // Define a text color variable

// Step 2: Create the main Sass file where styles are combined.
// For example: main.scss

// Step 3: Use the @import directive in main.scss to include the partial.
// The @import statement does not require the underscore or file extension.
// Sass understands that it is importing a partial.
@import 'variables';

// Step 4: Use the variables defined in _variables.scss within main.scss.
body {
  background-color: $primary-color; // Apply the primary color to the background
  color: $text-color; // Set the text color
}

h1 {
  color: $secondary-color; // Apply the secondary color to headings
}

// Explanation of the process:
// - _variables.scss contains the reusable variables for styling.
// - main.scss imports _variables.scss, gaining access to the variables defined in it.
// - The compiled CSS will contain the styles from main.scss, including those using the imported variables.
